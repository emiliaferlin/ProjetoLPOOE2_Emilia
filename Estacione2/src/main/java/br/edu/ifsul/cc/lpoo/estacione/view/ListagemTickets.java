/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.ifsul.cc.lpoo.estacione.view;

import br.edu.ifsul.cc.lpoo.estacione.dao.PersistenciaJPA;
import br.edu.ifsul.cc.lpoo.estacione.dao.TicketAtualizadoListner;
import br.edu.ifsul.cc.lpoo.estacione.model.Carro;
import br.edu.ifsul.cc.lpoo.estacione.model.Ticket;
import br.edu.ifsul.cc.lpoo.estacione.model.Vaga;
import br.edu.ifsul.cc.lpoo.estacione.view.cadastros.DadosTickets;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Mili
 */
public class ListagemTickets extends javax.swing.JFrame {

    /**
     * Creates new form ListagemTickets
     */
    PersistenciaJPA persistencia;
    public ListagemTickets() {
        initComponents();
        persistencia = new PersistenciaJPA();
        atualizarListaTickets();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listTickets = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        btNovo = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        btRemover = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(listTickets);

        jLabel1.setText("Listagem de Tickets");

        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        btRemover.setText("Remover");
        btRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverActionPerformed(evt);
            }
        });

        btVoltar.setText("Voltar");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btNovo)
                        .addGap(39, 39, 39)
                        .addComponent(btEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(btRemover)
                        .addGap(37, 37, 37)
                        .addComponent(btVoltar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btNovo)
                    .addComponent(btEditar)
                    .addComponent(btRemover)
                    .addComponent(btVoltar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        DadosTickets telaTicket = new DadosTickets();
        telaTicket.setListener(new TicketAtualizadoListner() {
                @Override
                public void onTicketAtualizado() {
                    atualizarListaTickets();
                }
            });
        telaTicket.setVisible(true);
        atualizarListaTickets();
    }//GEN-LAST:event_btNovoActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        Ticket ticketSelecionada = listTickets.getSelectedValue();
        //persistencia.conexaoAberta();
        if (ticketSelecionada != null) {
            DadosTickets telaTicket = new DadosTickets();
            
            telaTicket.setTickets(ticketSelecionada);
            telaTicket.setListener(new TicketAtualizadoListner() {
                @Override
                public void onTicketAtualizado() {
                    atualizarListaTickets();
                }
            });
            telaTicket.setVisible(true);


           
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione um ticket antes");
        }
        
        atualizarListaTickets();
    }//GEN-LAST:event_btEditarActionPerformed

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        Ticket ticketSelecionada = listTickets.getSelectedValue();
        if (ticketSelecionada != null) {
            int confirmacaoDel = JOptionPane.showConfirmDialog(rootPane,
                    "Tem certeza que deseja remover este ticket " + ticketSelecionada.getNumero());
            if (confirmacaoDel == JOptionPane.YES_OPTION) {
                try {
                    persistencia = new PersistenciaJPA();
                    persistencia.conexaoAberta();
                    //pega ticket
                    ticketSelecionada = (Ticket) persistencia.find(Ticket.class, ticketSelecionada.getId());
                    
                    if(ticketSelecionada.getVaga() != null){
                        //remover vaga 
                        Vaga vag = (Vaga) persistencia.find(Vaga.class, ticketSelecionada.getVaga().getId());
                        vag.setTicket(null);
                        ticketSelecionada.setVaga(null);
                        persistencia.persist(vag);
                        
                    }
                   
                    
                    if(ticketSelecionada.getCarro() != null){
                     //Remover carro
                        Carro car = (Carro) persistencia.find(Carro.class, ticketSelecionada.getCarro().getId());
                        car.setTicket(null);
                        ticketSelecionada.setCarro(null);
                        persistencia.persist(car);
                          
                    }
                    
                    //se caso tiver um carro ou vaga vinculado, remove este para pode excluir da tabela
                    if(ticketSelecionada.getVaga() == null && ticketSelecionada.getCarro() == null){
                        //periste ticket e j√° remove
                        persistencia.persist(ticketSelecionada);
                    }
                    
                    persistencia.remover(ticketSelecionada);
                    persistencia.fecharConexao();
                    atualizarListaTickets();

                } catch (Exception e) {
                    System.err.println("Erro ao excluir Ticket: " + e.getMessage());
                } finally {
                    persistencia.fecharConexao();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Nenhuma ticket selecionado!");
        }
    }//GEN-LAST:event_btRemoverActionPerformed

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btVoltarActionPerformed
    
    private void atualizarListaTickets() {
        listTickets.clearSelection();
        persistencia.conexaoAberta();
        List<Ticket> tic = persistencia.listaTicktes();
        DefaultListModel<Ticket> tickets = new DefaultListModel<>();
        for (Ticket t : tic) {
            tickets.addElement(t);
        }
        
        listTickets.setModel(tickets);
        persistencia.fecharConexao();
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListagemTickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListagemTickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListagemTickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListagemTickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListagemTickets().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btRemover;
    private javax.swing.JButton btVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Ticket> listTickets;
    // End of variables declaration//GEN-END:variables
}

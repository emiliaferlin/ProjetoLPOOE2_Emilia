/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.ifsul.cc.lpoo.estacione.view;

import br.edu.ifsul.cc.lpoo.estacione.dao.PersistenciaJPA;
import br.edu.ifsul.cc.lpoo.estacione.dao.VagaAtualizarListner;
import br.edu.ifsul.cc.lpoo.estacione.model.Ticket;
import br.edu.ifsul.cc.lpoo.estacione.model.Vaga;
import br.edu.ifsul.cc.lpoo.estacione.view.cadastros.DadosVaga;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Mili
 */
public class ListagemVagas extends javax.swing.JFrame {

    /**
     * Creates new form listagemVagas
     */
    PersistenciaJPA persistencia;
    public ListagemVagas(){
        initComponents();
        persistencia = new PersistenciaJPA();
        atualizarListaVagas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listVagas = new javax.swing.JList<>();
        voltar = new javax.swing.JButton();
        adicionarVaga = new javax.swing.JButton();
        removerVaga = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Listagem das Vagas do Estacione");

        jScrollPane1.setViewportView(listVagas);

        voltar.setText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        adicionarVaga.setText("Adicionar");
        adicionarVaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarVagaActionPerformed(evt);
            }
        });

        removerVaga.setText("Remover");
        removerVaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerVagaActionPerformed(evt);
            }
        });

        btEditar.setText("Editar");
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(jLabel1)
                .addContainerGap(115, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(adicionarVaga)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btEditar)
                        .addGap(34, 34, 34)
                        .addComponent(removerVaga)
                        .addGap(36, 36, 36)
                        .addComponent(voltar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(voltar)
                    .addComponent(adicionarVaga)
                    .addComponent(removerVaga)
                    .addComponent(btEditar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_voltarActionPerformed

    private void adicionarVagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarVagaActionPerformed
        DadosVaga telaVaga = new DadosVaga();
        telaVaga.setListener(new VagaAtualizarListner() {
                @Override
                public void onVagaAtualizada() {
                    atualizarListaVagas();
                }
            });
        telaVaga.setVisible(true);
        atualizarListaVagas();
    }//GEN-LAST:event_adicionarVagaActionPerformed

    private void removerVagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerVagaActionPerformed
       Vaga vagaSelecionada = listVagas.getSelectedValue();
        if (vagaSelecionada != null) {
            int confirmacaoDel = JOptionPane.showConfirmDialog(rootPane,
                    "Tem certeza que deseja remover esta vaga " + vagaSelecionada.getNumero());
            if (confirmacaoDel == JOptionPane.YES_OPTION) {
                try {
                    persistencia = new PersistenciaJPA();
                    persistencia.conexaoAberta();
                     
                    //se caso tiver um ticket vinculado, remove este para pode excluir da tabela
                    if(vagaSelecionada.getTicket() != null){
                        vagaSelecionada = (Vaga) persistencia.find(Vaga.class, vagaSelecionada.getId());
                        Ticket tic = (Ticket) persistencia.find(Ticket.class, vagaSelecionada.getTicket().getId());
                        tic.setVaga(null);
                        vagaSelecionada.setTicket(null);
                        persistencia.persist(tic);
                        persistencia.persist(vagaSelecionada);
                    }
                    
                    persistencia.remover(vagaSelecionada);
                    persistencia.fecharConexao();
                    atualizarListaVagas();

                } catch (Exception e) {
                    System.err.println("Erro ao excluir Vaga: " + e.getMessage());
                } finally {
                    persistencia.fecharConexao();
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,
                    "Nenhuma vaga selecionada!");
        }
    }//GEN-LAST:event_removerVagaActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
        Vaga vagaSelecionada = listVagas.getSelectedValue();
        //persistencia.conexaoAberta();
        if (vagaSelecionada != null) {
            DadosVaga telaVaga = new DadosVaga();
            
            telaVaga.setVaga(vagaSelecionada);
            telaVaga.setListener(new VagaAtualizarListner() {
                @Override
                public void onVagaAtualizada() {
                    atualizarListaVagas();
                }
            });
            telaVaga.setVisible(true);


           
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione uma vaga antes");
        }
        
        atualizarListaVagas();
    }//GEN-LAST:event_btEditarActionPerformed
    
    private void atualizarListaVagas() {
        listVagas.clearSelection();
        persistencia.conexaoAberta();
        List<Vaga> vag = persistencia.listaVagas();
        DefaultListModel<Vaga> vagas = new DefaultListModel<>();
        for (Vaga m : vag) {
            vagas.addElement(m);
        }
        
        listVagas.setModel(vagas);
        persistencia.fecharConexao();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListagemVagas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListagemVagas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListagemVagas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListagemVagas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListagemVagas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionarVaga;
    private javax.swing.JButton btEditar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Vaga> listVagas;
    private javax.swing.JButton removerVaga;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
